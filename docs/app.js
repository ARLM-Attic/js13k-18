const TILE_SIZE=8,GAME_WIDTH=128,GAME_HEIGHT=128,MAP_HEIGHT=15,MAP_WIDTH=16,ITEM_KEY="K",ITEM_DOOR="D",ITEM_SIGN="S";function getMap(){const t=world[player.wy];if(!t)return;const e=t[player.wx];return e?rooms[e]:void 0}function getTileAt(t,e){if(!map)return;const n=map.data[e];return n&&n[t]}function getItemAt(t,e){if(map&&map.items)return map.items.find(n=>n.x===t&&n.y===e)}let pressed={};const KEY_W=87,KEY_A=65,KEY_S=83,KEY_D=68,KEY_ENTER=13;function onKeydown(t){pressed[t.which]=!0,input(),render()}function onKeyup(t){pressed[t.which]=!1}function onBlur(){pressed={}}addEventListener("keydown",onKeydown),addEventListener("keyup",onKeyup),addEventListener("blur",onBlur);const isDown=t=>!!pressed[t];function input(){if(mode===MODE_TEXT)return void(isDown(KEY_ENTER)&&nextText());let t=player.x,e=player.y;isDown(KEY_W)&&(e-=1),isDown(KEY_A)&&(t-=1),isDown(KEY_S)&&(e+=1),isDown(KEY_D)&&(t+=1);const n=getItemAt(t,e);if(n){if(n.collectable&&pickUpItem(n),n.type===ITEM_DOOR){const t=getInventoryItem(ITEM_KEY);t&&(consumeInventoryItem(t),destroyItem(n))}else n.type===ITEM_SIGN&&showText(n.text);if(n.solid)return}const r=getTileAt(t,e);if(r&&r.solid)return;let a=!1;e<0?(player.wy-=1,e=MAP_HEIGHT-1,a=!0):e>=MAP_HEIGHT?(player.wy+=1,e=0,a=!0):t>=MAP_WIDTH?(player.wx+=1,t=0,a=!0):t<0&&(player.wx-=1,t=MAP_WIDTH-1,a=!0),a&&(map=getMap()),player.x=t,player.y=e}function consumeInventoryItem(t){player.inventory=player.inventory.filter(e=>e!==t)}function getInventoryItem(t){return player.inventory.find(e=>e.type===t)}function pickUpItem(t){destroyItem(t),player.inventory.push(t)}function destroyItem(t){map.items=map.items.filter(e=>e!==t)}function render(){clear(),ctx.translate(0,8),drawMap(),drawItems(),drawPlayer(),ctx.translate(0,-8),drawUI()}function clear(){ctx.fillStyle="#0f1517",ctx.fillRect(0,0,GAME_WIDTH,GAME_HEIGHT)}function drawUI(){drawInventory(),currentText&&drawText(currentText)}function drawInventory(){player.inventory.forEach(t=>{const e=15*TILE_SIZE;drawSprite(t.sx,t.sy,e,0)})}function drawItems(){map&&map.items.forEach(t=>{drawSprite(t.sx,t.sy,t.x*TILE_SIZE,t.y*TILE_SIZE)})}function drawMap(){if(map)for(let t=0;t<MAP_HEIGHT;t++)for(let e=0;e<MAP_WIDTH;e++){const n=map.data[t][e];n&&drawTile(n)}}function drawTile({x:t,y:e,sx:n,sy:r}){drawSprite(n,r,t*TILE_SIZE,e*TILE_SIZE)}function drawPlayer(){drawSprite(0,8,player.x*TILE_SIZE,player.y*TILE_SIZE)}function drawSprite(t,e,n,r){ctx.drawImage(sprites,t,e,TILE_SIZE,TILE_SIZE,n,r,TILE_SIZE,TILE_SIZE)}function drawText(t){const e=t.toUpperCase().split(/(.{1,24}\b)/).filter(Boolean).map(t=>t.trim()),n=e.slice().sort((t,e)=>e.length-t.length)[0].length;let r=4*n+8;r%2!=0&&(r+=1);let a=8*e.length+8-2;a%2!=0&&(a+=1);const o=(128-r)/2,s=(128-a)/2;ctx.fillStyle="#000000",ctx.fillRect(o,s,r,a),e.forEach((t,e)=>t.split("").forEach((t,n)=>{const r=getX(t),a=4*n+4,i=8*e+4;ctx.drawImage(font,r,0,3,5,a+o,i+s,3,5)}))}function getX(t){const e=t.charCodeAt(0);return 32===e?78:44===e?81:39===e?84:3*(e-65)}const spaceToNull=t=>" "===t?null:t,tileData={0:{},1:{sy:0,sx:8,solid:!0},2:{sy:0,sx:16,solid:!0}},itemMap={[ITEM_KEY]:()=>({type:ITEM_KEY,sx:8,sy:8,collectable:!0,solid:!1}),[ITEM_DOOR]:()=>({type:ITEM_DOOR,sx:16,sy:8,collectable:!1,solid:!0}),[ITEM_SIGN]:([t])=>({type:ITEM_SIGN,sx:24,sy:8,text:t.split("|")})},rooms=[{data:"122222222222022110000000000000011000000000000001100001222100000110000200020000011000000200000001100001000100000210000222220000001000000000000001100000000000000110000000122222211000000010000002100000001000000010000000100000012220222222222222",items:["K:9:12","D:3:14"]},{data:"                                    12222221        10000001        10000001        22100122          1001            1001            1001            1001            1001      1222222002222221100000000000000110000000000000012222222222220222"},{data:"           12221           10002           10000           10001           22222                222221          000001          210001           10001           10001          220001          000001          222222                          "},{data:"122022222222222110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000012222222222222222",items:["S:12:0:Important information about your quest"]},{data:"122222222222222110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000011000000000000001100000000000000110000000000000012222222222222222",items:[]}].map(parseMap),world=["1 ","02","3 "].map(parseWorld);function parseWorld(t){return t.split("").map(spaceToNull)}function parseItem(t){const[e,n,r,...a]=t.split(":");return{...itemMap[e](a),x:+n,y:+r}}function parseMap(t){const e=t.data.split("").map(spaceToNull);t.data=[];for(let n=0;n<15;n++){const r=[];for(let t=0;t<16;t++){let a=e[16*n+t],o=null;null!==a&&(o={type:a,x:t,y:n,sx:0,sy:0,collide:!1,...tileData[a]||{}}),r.push(o)}t.data.push(r)}return t.items=t.items?t.items.map(parseItem):[],t}let textStack=[],currentText=void 0;const MODE_MOVE=0,MODE_TEXT=1;let mode=MODE_MOVE;function showText(t){Array.isArray(t)||(t=[t]),textStack=[...t],nextText()}function nextText(){currentText=textStack.shift(),mode=currentText?MODE_TEXT:MODE_MOVE}const canvas=document.querySelector("canvas");canvas.width=GAME_WIDTH,canvas.height=GAME_HEIGHT;const ctx=canvas.getContext("2d"),player={x:12,y:7,wx:0,wy:1,inventory:[]};let sprites,font,map=getMap();function loadImg(t){const e=new Image;return new Promise(n=>{e.onload=(()=>n(e)),e.src=t})}function start([t,e]){sprites=t,font=e,render()}Promise.all([loadImg("./sprites.png"),loadImg("./font.png")]).then(start);